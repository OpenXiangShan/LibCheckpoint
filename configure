#!/bin/bash

# 默认值（可以根据需要修改默认值）
GCPT_PAYLOAD_PATH=""
GCPT_PAYLOAD_POSITION=""
DISPLAY_CPU_N=""
STOP_CPU_N=""
USING_QEMU_DUAL_CORE_SYSTEM=""
USING_BARE_METAL_WORKLOAD=""
USING_DEFAULT_CONFIG=""
MODE="normal"

# 解析命令行参数
while [[ $# -gt 0 ]]; do
  case "$1" in
    --gcpt-payload=*)
      GCPT_PAYLOAD_PATH="${1#*=}"
      shift
      ;;
    --gcpt-payload-position=*)
      GCPT_PAYLOAD_POSITION="${1#*=}"
      shift
      ;;
    --display-cpu=*)
      DISPLAY_CPU_N="${1#*=}"
      shift
      ;;
    --stop-cpu=*)
      STOP_CPU_N="${1#*=}"
      shift
      ;;
    --mode=*)
      MODE="${1#*=}"
      shift
      ;;
    --enable-debug)
      # reserved but not currently in use
      ENABLE_DEBUG="yes"
      shift
      ;;
    --help)
      echo "Usage: $0 [OPTIONS]"
      echo "Options:"
      echo "  --gcpt_payload=PATH                   Set GCPT payload path"
      echo "  --gcpt_payload_position=VALUE         Set GCPT payload position"
      echo "  --display_cpu=VALUE                   Set DISPLAY_CPU_N"
      echo "  --stop_cpu=VALUE                      Set STOP_CPU_N"
      echo "  --mode=<normal|dual_core|bare_metal>  Select operating mode"
      echo "  --encode_decode_check                 Enable ENCODE_DECODE_CHECK"
      echo "  --enable-debug                        Enable debug (if applicable)"
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      exit 1
      ;;
  esac
done

case "$MODE" in
  normal)
    USING_DEFAULT_CONFIG="1"
    ;;
  dual_core)
    USING_QEMU_DUAL_CORE_SYSTEM="1"
    ;;
  bare_metal)
    USING_BARE_METAL_WORKLOAD="1"
    ;;
  *)
    echo "Error: Invalid mode \"$MODE\". Valid modes are: normal, dual_core, bare_metal."
    exit 1
    ;;
esac

# generate CONFIG.mk
{
  echo "# Auto-generated by configure"
  if [ -n "$GCPT_PAYLOAD_PATH" ]; then
    echo "LDFLAGS += -Xlinker --defsym GCPT_PAYLOAD_PATH=1"
    echo "CFLAGS += -DGCPT_PAYLOAD_PATH=\"$GCPT_PAYLOAD_PATH\""
  fi
  if [ -n "$GCPT_PAYLOAD_POSITION" ]; then
    echo "LDFLAGS += -Xlinker --defsym GCPT_PAYLOAD_POSITION=$GCPT_PAYLOAD_POSITION"
    echo "CFLAGS += -DGCPT_PAYLOAD_POSITION=$GCPT_PAYLOAD_POSITION"
  fi
  if [ -n "$DISPLAY_CPU_N" ]; then
    echo "CFLAGS += -DDISPLAY=$DISPLAY_CPU_N"
  fi
  if [ -n "$STOP_CPU_N" ]; then
    echo "CFLAGS += -DSTOP_CPU=$STOP_CPU_N"
  fi
  if [ -n "$USING_QEMU_DUAL_CORE_SYSTEM" ]; then
    echo "CFLAGS += -DUSING_QEMU_DUAL_CORE_SYSTEM=$USING_QEMU_DUAL_CORE_SYSTEM"
  fi
  if [ -n "$USING_BARE_METAL_WORKLOAD" ]; then
    echo "CFLAGS += -DUSING_BARE_METAL_WORKLOAD=$USING_BARE_METAL_WORKLOAD"
  fi
  if [ -n "$USING_DEFAULT_CONFIG" ]; then
    echo "CFLAGS += -DUSING_DEFAULT_CONFIG=$USING_DEFAULT_CONFIG"
  fi
} > CONFIG.mk

echo "Configuration complete. CONFIG.mk has been generated."


